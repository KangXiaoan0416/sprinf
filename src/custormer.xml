<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="customerService" class="test.aop.CustomerService">
        <property name="name" value="康小安"/>
        <property name="url" value="http://Kangxiaoan0416.github.io"/>
    </bean>

    <bean id="hijackBeforeMethodBean" class="test.aop.HijackBeforeMethod"/>
    <bean id="hijackAfterMethodBean" class="test.aop.HijackAfterMethod"/>
    <bean id="hijackThrowExceptionBean" class="test.aop.HijackThrowException"/>
    <bean id="hijackAroundMethodBean" class="test.aop.HijackAroundMethod"/>

    <bean id="hijackAroundMethodBeanAdvice" class="test.aop.HijackAroundMethod"/>

    <!-- AOP实现方式，经典的基于代理的AOP实现方式-->
    <bean id="customerYiibaicut" class="org.springframework.aop.support.NameMatchMethodPointcut">
        <property name="mappedName" value="printName" />
    </bean>

   <!-- <bean id="customerAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
        <property name="pointcut" ref="customerYiibaicut" />
        <property name="advice" ref="hijackAroundMethodBeanAdvice" />
    </bean>-->

    <bean id="customerAdvisor1" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
        <property name="patterns">
            <list>
                <value>.*URL.*</value>
                <!--<value>.*Name</value>-->
            </list>
        </property>
        <property name="advice" ref="hijackAroundMethodBeanAdvice" />
    </bean>

    <!--<bean id="customerServiceProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="customerService"/>
        <property name="interceptorNames">
            <list>
                &lt;!&ndash; <value>hijackBeforeMethodBean</value>
                 <value>hijackAfterMethodBean</value>
                 <value>hijackThrowExceptionBean</value>
                <value>hijackAroundMethodBean</value> &ndash;&gt;
                <value>customerAdvisor1</value>
            </list>
        </property>
    </bean>-->

    <!--自动创建代理,根据名称-->
    <!--<bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
        <property name="beanNames">
            <list>
                <value>*Service</value>
            </list>
        </property>
        <property name="interceptorNames">
            <list>
                <value>customerAdvisor</value>
            </list>
        </property>
    </bean>-->
    <!--如果有bean关联则自动创建代理 cutormer,custormer1这种与hijackAroundMethodBeanAdvice相关联就可已自动创建-->
    <bean id="customerAdvisor2" class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
        <property name="mappedName" value="printName"/>
        <property name="advice" ref="hijackAroundMethodBeanAdvice" />
    </bean>
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />


</beans>